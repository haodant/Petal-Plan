{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","react_router_dom","to","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","layout_SignedInLinks","layout_SignedOutLinks","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","createAt","calendar","ProjectList","projects","projects_ProjectSummary","Dashboard","_this$props","this","projects_ProjectList","dashboard_Notifications","react_router","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","objectSpread","Date","App","layout_Navbar","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","console","log","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","__REDUX_DEVTOOLS_EXTENSION__","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.73d00b40.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux'\nimport { signOut } from '../../store/actions/authActions'\n\nconst SignedInLinks = (props) => {\n  return (\n    <ul className='right'>\n      <li><NavLink to='/create'>New Project</NavLink></li>\n      <li><a onClick={props.signOut}>Log Out</a></li>\n      <li><NavLink to='/' className='btn btn-floating orange accent-3'>{props.profile.initials}</NavLink></li>\n    </ul>\n  )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signOut: () => dispatch(signOut())\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks);\n","export const signIn = (credentials) => {\n  return (dispatch, getState, {getFirebase}) => {\n    const firebase = getFirebase();\n\n    firebase.auth().signInWithEmailAndPassword(\n      credentials.email,\n      credentials.password\n    ).then(()=> {\n      dispatch({ type: 'LOGIN_SUCCESS' });\n    }).catch((err) => {\n      dispatch({ type: 'LOGIN_ERROR', err });\n    });\n  }\n}\n\nexport const signOut = () => {\n  return (dispatch, getState, {getFirebase}) => {\n    const firebase = getFirebase();\n    firebase.auth().signOut().then(()=> {\n      dispatch({ type: 'SIGNOUT_SUCCESS' });\n    })\n  }\n}\n\n\nexport const signUp = (newUser) => {\n  return (dispatch, getState, {getFirebase, getFirestore}) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n\n    firebase.auth().createUserWithEmailAndPassword(\n      newUser.email,\n      newUser.password\n    ).then((resp) => {\n      return firestore.collection('users').doc(resp.user.uid).set({\n        firstName: newUser.firstName,\n        lastName: newUser.lastName,\n        initials: newUser.firstName[0] + newUser.lastName[0]\n      })\n    }).then(() => {\n      dispatch({ type: 'SIGNUP_SUCCESS' })\n    }).catch(err => {\n      dispatch({ type: 'SIGNUP_ERROR', err })\n    })\n  }\n}\n","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst SignedOutLinks = () => {\n  return (\n    <ul className='right'>\n      <li><NavLink to='/signup'>Signup</NavLink></li>\n      <li><NavLink to='/signin'>Login</NavLink></li>\n    </ul>\n  )\n}\n\nexport default SignedOutLinks;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport SignedInLinks from './SignedInLinks';\nimport SignedOutLinks from './SignedOutLinks';\nimport { connect } from 'react-redux'\n\nconst Navbar = (props) => {\n  const { auth, profile } = props;\n  const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />\n  return (\n    <nav className=\"nav-wrapper orange lighten-3\">\n      <div className=\"container\">\n        <Link to='/' className=\"brand-logo\">PetalPlan</Link>\n        {links}\n      </div>\n    </nav>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n    profile: state.firebase.profile\n  }\n}\nexport default connect(mapStateToProps)(Navbar);\n","import React from 'react';\nimport moment from 'moment'\n\nconst Notifications = (props) => {\n  const {notifications} = props;\n  return (\n    <div className=\"section\">\n      <div className=\"card z-depth-1\">\n        <div className=\"card-content\">\n          <span className=\"card-title\">Notifications</span>\n          <ul className=\"notifications\">\n            { notifications && notifications.map(item => {\n              return (\n                <li key={item.id}>\n                  <span className=\"orange-text text-darken-4\">{item.user} </span>\n                  <span>{item.content}</span>\n                  <div className=\"grey-text note-date\">{moment(item.time.toDate()).fromNow()}</div>\n                </li>\n              )\n            })}\n          </ul>\n        </div>\n      </div>\n\n    </div>\n  )\n}\n\nexport default Notifications;\n","import React from 'react';\nimport moment from 'moment';\n\nconst ProjectSummary = ({project}) => {\n  return (\n    <div className='card z-depth-1 project-summary'>\n      <div className='card-content grey-text text-darken-3'>\n        <span className='card-title'>{project.title}</span>\n        <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\n        <p className='grey-text'>{moment(project.createAt.toDate()).calendar()}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default ProjectSummary;\n","import React from 'react';\nimport ProjectSummary from './ProjectSummary';\nimport { Link } from 'react-router-dom';\n\nconst ProjectList = ({projects}) => {\n  return (\n    <div className='project-list section'>\n      { projects && projects.map(project => {\n        return (\n          <Link to={'/project/' + project.id} key={project.id}>\n          <ProjectSummary project={project} />\n          </Link>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default ProjectList;\n","import React, { Component } from 'react';\nimport Notifications from './Notifications';\nimport ProjectList from '../projects/ProjectList';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\n\nclass Dashboard extends Component {\n  render() {\n    const { projects, auth, notifications } = this.props;\n    if (!auth.uid) return <Redirect to='/signin' />;\n\n    return (\n      <div className='dashboard container'>\n        <div className='row'>\n          <div className='col s12 m6'>\n            <ProjectList projects={projects} />\n          </div>\n          <div className='col s12 m5 offset-m1'>\n            <Notifications notifications={notifications}/>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    projects: state.firestore.ordered.projects,\n    auth: state.firebase.auth,\n    notifications: state.firestore.ordered.notifications\n  };\n}\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: 'projects', orderBy: ['createAt', 'desc'] },\n    { collection: 'notifications', limit: 3, orderBy: ['time', 'desc'] }\n  ])\n)(Dashboard);\n","import React from 'react';\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom'\nimport moment from 'moment'\n\n const ProjectDetails = (props) => {\n   const { project, auth } = props;\n   if (!auth.uid) return <Redirect to='/signin' />;\n   if (project) {\n     return (\n       <div className='container section project-details'>\n        <div className='card z-depth-0'>\n          <div className='card-content'>\n            <span className='card-title'>{ project.title }</span>\n            <p>{ project.content }</p>\n          </div>\n          <div className='card-action grey lighten-4 grey-text'>\n              <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\n              <div>{moment(project.createAt.toDate()).calendar()}</div>\n          </div>\n        </div>\n       </div>\n     )\n   } else {\n     return (\n        <div className='container center'>\n          <p>Loading project...</p>\n        </div>\n     )\n   }\n\n };\n\n const mapStateToProps = (state, ownProps) => {\n   const id = ownProps.match.params.id;\n   const projects = state.firestore.data.projects;\n   const project = projects ? projects[id] : null;\n   return {\n     project: project,\n     auth: state.firebase.auth\n   }\n }\n\n export default compose(\n   connect(mapStateToProps),\n   firestoreConnect([\n     { collection: 'project' }\n   ])\n )(ProjectDetails);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { signIn } from '../../store/actions/authActions'\nimport { Redirect } from 'react-router-dom'\n\nclass SignIn extends Component {\n  state = {\n    email: '',\n    password: ''\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.signIn(this.state);\n  }\n\n  render() {\n    const { authError, auth } = this.props;\n    if (auth.uid) return <Redirect to='/' />;\n    return (\n      <div className='container'>\n        <form onSubmit={this.handleSubmit} className='white'>\n          <h5 className='grey-text text-darken-3'>Sign In</h5>\n          <div className='input-field'>\n            <label htmlFor='email'>Email</label>\n            <input type='email' id='email' onChange={this.handleChange} />\n          </div>\n          <div className='input-field'>\n            <label htmlFor='password'>Password</label>\n            <input type='password' id='password' onChange={this.handleChange} />\n          </div>\n          <div className='input-field'>\n            <button className='btn orange accent-3 z-depth-0'>Login</button>\n            <div className='red-text center'>\n             { authError ? <p>{authError}</p> : null}\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    authError: state.auth.authError,\n    auth: state.firebase.auth\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signIn: (creds) => dispatch(signIn(creds))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signUp } from '../../store/actions/authActions'\n\nclass SignUp extends Component {\n  state = {\n    email: '',\n    password: '',\n    firstName: '',\n    lastName: ''\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.signUp(this.state);\n  }\n\n  render() {\n    const { auth, authError } = this.props;\n    if (auth.uid) return <Redirect to='/' />;\n    return (\n      <div className='container'>\n        <form onSubmit={this.handleSubmit} className='white'>\n          <h5 className='grey-text text-darken-3'>Sign Up</h5>\n          <div className='input-field'>\n            <label htmlFor='email'>Email</label>\n            <input type='email' id='email' onChange={this.handleChange} />\n          </div>\n          <div className='input-field'>\n            <label htmlFor='password'>Password</label>\n            <input type='password' id='password' onChange={this.handleChange} />\n          </div>\n          <div className='input-field'>\n            <label htmlFor='firstName'>First Name</label>\n            <input type='text' id='firstName' onChange={this.handleChange} />\n          </div>\n          <div className='input-field'>\n            <label htmlFor='lastName'>Last Name</label>\n            <input type='text' id='lastName' onChange={this.handleChange} />\n          </div>\n          <div className='input-field'>\n            <button className='btn orange accent-3 z-depth-0'>Sign up</button>\n            <div className=\"red-text center\">\n              { authError ? <p>{ authError }}</p> : null }\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n    authError: state.auth.authError\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signUp: (newUser) => dispatch(signUp(newUser))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createProject } from '../../store/actions/projectActions';\nimport { Redirect } from 'react-router-dom'\n\nclass CreateProject extends Component {\n  state = {\n    title: '',\n    content: ''\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.createProject(this.state);\n    this.props.history.push('/');\n  }\n\n  render() {\n    const { auth } = this.props;\n    if (!auth.uid) return <Redirect to='/signin' />;\n    return (\n      <div className='container'>\n        <form onSubmit={this.handleSubmit} className='white'>\n          <h5 className='grey-text text-darken-3'>Create Project</h5>\n          <div className='input-field'>\n            <label htmlFor='title'>Title</label>\n            <input type='text' id='title' onChange={this.handleChange} />\n          </div>\n          <div className='input-field'>\n            <label htmlFor='content'>Project Content</label>\n            <textarea id='content' className='materialize-textarea' onChange={this.handleChange} />\n          </div>\n          <div className='input-field'>\n            <button className='btn orange accent-3 z-depth-0'>Create</button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    createProject: (project) => dispatch(createProject(project))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);\n","export const createProject = (project) => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    //make async call to database\n    const firestore = getFirestore();\n    const profile = getState().firebase.profile;\n    const authorId = getState().firebase.auth.uid;\n    firestore.collection('projects').add({\n      ...project,\n      authorFirstName: profile.firstName,\n      authorLastName: profile.lastName,\n      authorId: authorId,\n      createAt: new Date()\n    }).then(() => {\n      dispatch({ type: 'CREATE_PROJECT', project });\n    }).catch((err) => {\n      dispatch({ type: 'CREATE_PROJECT_ERROR', err });\n    })\n\n  }\n}\n","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path='/' component={Dashboard} />\n            <Route path='/project/:id' component={ProjectDetails} />\n            <Route path='/signin' component={SignIn} />\n            <Route path='/signup' component={SignUp} />\n            <Route path='/create' component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n  authError: null\n}\n\nconst authReducer = (state = initState, action) => {\n  switch(action.type) {\n    case 'LOGIN_ERROR':\n      return {\n      ...state, authError: 'Login failed'\n      }\n    case 'LOGIN_SUCCESS':\n      return {\n      ...state, authError: null\n      }\n    case 'SIGNOUT_SUCCESS':\n      console.log('signed out');\n      return state;\n    case 'SIGNUP_SUCCESS':\n      console.log('signup success');\n      return {\n        ...state,\n        authError: null\n      }\n    case 'SIGNUP_ERROR':\n      console.log('signup error');\n      return {\n        ...state,\n        authError: action.err.message\n      }\n    default:\n      return state;\n  }\n  return state\n}\n\nexport default authReducer\n","const initState = {\n  projects:[\n    {id:'1', title: \"titlesdfa\", content:'hladfa hfasdf adfa'},\n    {id:'2', title: \"titlessfa\", content:'hladfa hfasdf adfa'},\n    {id:'3', title: \"titlesgfa\", content:'hladfa hfasdf adfa'},\n  ]\n}\n\nconst projectReducer = (state = initState, action) => {\n  switch (action.type)  {\n    case 'CREATE_PROJECT' :\n      console.log('created project', action.project);\n      return state;\n    case 'CREATE_PROJECT_ERROR' :\n      console.log('created project error', action.err);\n      return state;\n    default:\n      return state;\n  }\n}\n\nexport default projectReducer\n","import authReducer from './authReducer'\nimport projectReducer from './projectReducer'\nimport { combineReducers } from 'redux'\nimport { firestoreReducer } from 'redux-firestore'\nimport { firebaseReducer } from 'react-redux-firebase'\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  project: projectReducer,\n  firestore: firestoreReducer,\n  firebase: firebaseReducer\n});\n\nexport default rootReducer\n","import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\n// Your web app's Firebase configuration\nvar firebaseConfig = {\n  apiKey: \"AIzaSyD2TaM8FFsbjbhCQpJ6o1FXnNxfw3rT6Wk\",\n  authDomain: \"net-petalplan.firebaseapp.com\",\n  databaseURL: \"https://net-petalplan.firebaseio.com\",\n  projectId: \"net-petalplan\",\n  storageBucket: \"\",\n  messagingSenderId: \"600977851896\",\n  appId: \"1:600977851896:web:b366549ccdc6bb39\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n// firebase.firestore().settings({ timestampsInSnapshots: true });\n\nexport default firebase;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig';\n\nconst store = createStore(rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(fbConfig),\n    reactReduxFirebase(fbConfig, {useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true}),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n  // If you want your app to work offline and load faster, you can change\n  // unregister() to register() below. Note this comes with some pitfalls.\n  // Learn more about service workers: https://bit.ly/CRA-PWA\n  serviceWorker.unregister();\n})\n"],"sourceRoot":""}